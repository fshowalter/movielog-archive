---
---
:ruby
  review = Movielog.reviews[review.sequence]
  content_for(:title, "#{review.display_title} Movie Review")
  aka_titles = MovieDb.aka_titles_for_title(db: Movielog.db, title: review.title, display_title: review.display_title)
  viewings = Movielog.viewings_for_title(title: review.title)
  headline_cast = MovieDb.headline_cast_for_title(db: Movielog.db, title: review.title)
  directors = MovieDb.directors_for_title(db: Movielog.db, title: review.title)
  director_slug = directors.map { |d| "<span class='name'>#{d.first_name} #{d.last_name}</span>" }.to_sentence
  writers = MovieDb.writers_for_title(db: Movielog.db, title: review.title)
  content_for(
    :description,
    description_for_review(review: review, aka_titles: aka_titles, headline_cast: headline_cast))

%article.review{ itemscope: true, itemtype: 'http://schema.org/Review' }
  - if review.backdrop
    .review-backdrop{ data: { backdrop: review.backdrop } }

  %h1.page-title{ itemprop: 'name', data: { rhythm: 0 } }= review.display_title

  - if aka_titles.any?
    %dl.review-aka-list
      %dt.review-aka-list-heading aka
      - aka_titles.each do |aka_title|
        %dd.review-aka-list-item= aka_title unless aka_title == review.display_title

  .review-directed-by Directed by #{director_slug}

  .review-rating{ itemprop: 'reviewRating', itemscope: true, itemtype: 'http://schema.org/Rating' }
    %meta{ content: Movielog::ConvertGradeToNumber.call(grade: review.grade) / 3.0,
           itemprop: 'ratingValue' }
    %meta{ content: '0', itemprop: 'worstRating' }
    %meta{ content: '5', itemprop: 'bestRating' }
    = grade_to_image_tag(grade: review.grade)

  .post-content{ itemprop: 'reviewBody', data: { rhythm: 0 } }
    = markdown(review.content)
  %meta{ content: review.date.iso8601, itemprop: 'datepublished'}
  %span{ itemprop: 'author', itemscope: true, itemtype: 'http://schema.org/Person' }
    %meta{ content: 'Frank Showalter', itemprop: 'name' }
  %p.review-actions
    = "<span>#{review.display_title}</span> was reviewed on #{review.date.strftime('%b %-d, %Y')}. "
    = "I've seen it "
    %a{ href: "/viewings/?title=#{URI.escape(review.display_title)}", data: { no_instant: true } }
      = "#{pluralize(viewings.length, 'time')}. "
    = "More at the "
    %a{ href: "http://www.imdb.com/title/#{review.imdb_id}", data: { no_instant: true} } 
      IMDb
    = "."

    / .review-action-links
    /   %a.review-viewings-link{ href: "/viewings/?title=#{URI.escape(review.display_title)}", data: { no_instant: true } }
    /     = "Seen #{pluralize(viewings.length, 'time')}"
    /   &middot;
    /   %a.review-imdb-link{ href: "http://www.imdb.com/title/#{review.imdb_id}" } More at the IMDb
  / .review-cards
  /   .review-card
  /     %h3.review-viewings-list-header Viewings
  /     %ol.review-viewings-list
  /       - viewings.each_with_index do |viewing, index|
  /         %li.review-viewings-list-item{ value: index + 1, data: { sequence: index + 1 } }
  /           = viewing.date.strftime("%A  %B #{viewing.date.day.ordinalize}, %Y")
  /           %span.role= " via #{viewing.venue}"
  / .review-card
  /   %div{ itemprop: 'itemReviewed', itemscope: true, itemtype: 'http://schema.org/Movie' }
  /     %meta{ content: review.display_title, itemprop: 'name' }
  /     %h3.review-viewings-list-header Credits
  /     %h3.review-credits-list-header Directed by
  /     %ul.review-credits-list
  /       - directors.each do |director|
  /         %li.review-credits-list-item{ data: { rhythm: 0 } }
  /           #{director.first_name} #{director.last_name}
  /           - unless director.notes.blank?
  /             %span.role
  /               = " #{director.notes}"
  /     %h3.review-credits-list-header Starring
  /     %ul.review-credits-list
  /       - headline_cast.each do |performer|
  /         %li.review-credits-list-item{ itemprop: 'actor',
  /                               itemscope: true,
  /                               itemtype: 'http://schema.org/Person',
  /                               data: { rhythm: 0 } }
  /           %span{ itemprop: 'name' }
  /             #{performer.first_name} #{performer.last_name}
  /             %span.role
  /               = " as #{performer.role}"
  /     %h3.review-credits-list-header Written by
  /     %ul.review-credits-list
  /       - writers.each do |writer|
  /         %li.review-credits-list-item{ data: { rhythm: 0 } }
  /           #{writer.first_name} #{writer.last_name}
  /           %span.role
  /             = " #{writer.notes}"

  /   %p.review-imdb-link
  /     More at <a href="http://www.imdb.com/title/#{review.imdb_id}" data-no-instant >the IMDb</a>.
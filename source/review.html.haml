---
layout: :single
---
:ruby
  review = Movielog.reviews[review.sequence]
  content_for(:title, "#{review.display_title} Movie Review")
  description = review.headline.gsub( '_', '&#34;' ).html_safe
  meta_description = escape_html(description_for_review(review: review)).gsub( '_', '&#34;' ).html_safe
  more_for_cast = Movielog::Db::QueryRelatedTitlesByCast.call(db: Movielog.db, title: review.title)
  viewings = Movielog.viewings_for_title(title: review.title)


- content_for(:head) do
  %meta{ name: 'description', content: meta_description }
  %meta{ property: 'og:title', content: review.display_title }
  %meta{ property: 'og:url', content: "https://www.franksmovielog.com/reviews/#{review.slug}" }
  %meta{ property: 'og:image', content: review.backdrop }
  %meta{ property: 'og:description', content: description }
  %meta{ name: 'twitter:card', content: 'summary_large_image' }
  %meta{ name: 'twitter:site', content: '@franksmovielog' }
  %meta{ name: 'twitter:title', content: review.display_title }
  %meta{ name: 'twitter:description', content: description }
  %meta{ name: 'twitter:image', content: review.backdrop }


- content_for :post do
  %p
    <strong>Grade: #{review.grade}</strong>
  = partial('components/credits/credits', locals: { review: review, viewings: viewings })
  / - unless more_for_cast.empty?
  /   - more_for_cast.each do |performer, titles|
  /     - next unless titles.length > 3
  /     - related_titles = array_window(titles, 4, review.title).select{ |title| title != review.title }.map{ |title| Movielog.reviews_by_title[title] }
  /     = partial('components/more_posts/more_posts', locals: { heading: "More with #{performer.first_name} #{performer.last_name}" , more_posts: related_titles })

= partial('components/post/post', locals: { post: review })
= partial('components/post_share_footer/post_share_footer', locals: { post: review })



%script{ type: 'application/ld+json' }
  :plain
    {
      "@context":"http://schema.org",
      "@type":"Review",
      "author":{
        "@type":"Person",
        "name":"Frank Showalter",
        "sameAs":"https://www.frankshowalter.com"
      },
      "datePublished":"#{review.date.iso8601}",
      "description":"#{description}",
      "inLanguage":"en",
      "itemReviewed":{
        "@type":"Movie",
        "name":"#{review.display_title}",
        "sameAs":"http://www.imdb.com/title/#{review.imdb_id}/"
      },
      "publisher":{
        "@type":"Organization",
        "name":"Frank's Movie Log",
        "sameAs":"http://www.franksmovielog.com"
      },
      "reviewRating":{
        "@type":"Rating",
        "ratingValue": #{Movielog::ConvertGradeToNumber.call(grade: review.grade) / 3}
      }
    }




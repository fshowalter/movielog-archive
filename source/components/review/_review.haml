:ruby
  aka_titles = MovieDb.aka_titles_for_title(db: Movielog.db, title: review.db_title, display_title: review.title).reject{ |t| t.start_with?(review.title) }
  cast = MovieDb.headline_cast_for_title(title: review.db_title, db: Movielog.db, count: 100)
  directors = MovieDb.directors_for_title(db: Movielog.db, title: review.db_title)
  info = MovieDb.info_for_title(title: review.db_title, db: Movielog.db)
  more_for_cast = Movielog::Db::QueryRelatedTitlesByCast.call(db: Movielog.db, title: review.db_title)
  viewings = Movielog.viewings_for_title(title: review.db_title)
  writers = MovieDb.writers_for_title(title: review.db_title, db: Movielog.db)

%article.review
  = partial('components/post_backdrop/post_backdrop', locals: { backdrop: review.backdrop })

  %h1.review-title
    = review.title_without_year

  = grade_to_image_tag(grade: review.grade, options: { class: 'review-grade' })

  = partial('components/post_content/post_content') do
    .review-content
      = markdown(review.date.strftime('<time>%b %-d, %Y</time>&mdash;') + review.content + "<p><strong>Grade: #{review.grade}</strong>")

    %p.review-meta
      %span.review-meta_title
        = review.title
      %span.review-meta_director
        D:&nbsp;#{ directors.map{ |p| cast_and_crew_link(p) }.join(' & ') }
      %span.review-meta_country
        #{ review.year } | #{ info.country } | #{ info.running_time }&nbsp;mins. |
      - if aka_titles.any?
        %span.review-meta_aka
          %span.review-meta_aka_heading
            aka
          - aka_titles.each do |aka_title|
            - next if aka_title.start_with?(review.title)
            %span.review-meta_aka_title
              = aka_title.gsub(/\([^\)]+\)$/, '').strip
      %span.review-meta_seen
        = " I've&nbsp;seen&nbsp;it&nbsp;"
        %a{ href: "/viewings/?title=#{URI.escape(review.title)}", data: { no_carnac: true } }
          = "#{pluralize(viewings.length, 'time')}."


    .review-tags
      %ul.review-tags_list
        - directors.each do |person|
          - next unless Movielog.cast_and_crew.key?(person.full_name)
          %li.review-tags_list_item= cast_and_crew_link(person, class: 'review-tags_link')
        - cast.each do |person|
          - next unless Movielog.cast_and_crew.key?(person.full_name)
          %li.review-tags_list_item= cast_and_crew_link(person, class: 'review-tags_link')
        - writers.each do |person|
          - next unless Movielog.cast_and_crew.key?(person.full_name)
          %li.review-tags_list_item= cast_and_crew_link(person, class: 'review-tags_link')


    - unless more_for_cast.empty?
      - more_for_cast.each do |performer, titles|
        - next unless titles.length > 4
        - related_titles = array_window(titles, 5, review.db_title).select{ |title| title != review.db_title }.map{ |title| Movielog.reviews_by_title[title] }
        = partial('components/more_posts/more_posts', locals: { heading: "More with #{performer.first_name} #{performer.last_name}" , more_posts: related_titles })




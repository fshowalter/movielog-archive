---
layout: :layout_single
---
:ruby
  review = Movielog.reviews[review.sequence]
  description = Nokogiri::HTML(Tilt['markdown'].new(footnotes: false) { review.content.split("\n\n", 2)[0] }.render).text
  content_for(:inline_css, 'source/templates/review/review.scss')
  content_for(:title, "#{review.title} Movie Review")
  content_for(:javascript, javascript_include_tag('load-backdrops.js', async: :async ))

- content_for(:head) do
  %meta{ name: 'description', content: description }
  %meta{ property: 'og:title', content: review.display_title }
  %meta{ property: 'og:url', content: "https://www.franksmovielog.com/reviews/#{review.slug}" }
  %meta{ property: 'og:image', content: review.backdrop }
  %meta{ property: 'og:description', content: description }
  %meta{ name: 'twitter:card', content: 'summary_large_image' }
  %meta{ name: 'twitter:site', content: '@franksmovielog' }
  %meta{ name: 'twitter:title', content: review.display_title }
  %meta{ name: 'twitter:description', content: description }
  %meta{ name: 'twitter:image', content: review.backdrop }

%article.review
  = partial('components/post_backdrop/post_backdrop', locals: { post: review })

  %h1.review-title
    = review.title_without_year

  = grade_to_image_tag(grade: review.grade, options: { class: 'review-grade' })

  = partial('components/post_content/post_content') do
    = markdown(review.date.strftime('<time>%b %-d, %Y</time>&mdash;') + review.content + "<p><strong>Grade: #{review.grade}</strong>")

    = partial('templates/review/review_meta', locals: { review: review })

    = partial('templates/review/review_tags', locals: { review: review })

    = partial('templates/review/review_more', locals: { review: review })

%script{ type: 'application/ld+json' }
  :plain
    {
      "@context":"http://schema.org",
      "@type":"Review",
      "author":{
        "@type":"Person",
        "name":"Frank Showalter",
        "sameAs":"https://www.frankshowalter.com"
      },
      "datePublished":"#{review.date.iso8601}",
      "description":"#{description}",
      "inLanguage":"en",
      "itemReviewed":{
        "@type":"Movie",
        "name":"#{review.display_title}",
        "sameAs":"http://www.imdb.com/title/#{review.imdb_id}/"
      },
      "publisher":{
        "@type":"Organization",
        "name":"Frank's Movie Log",
        "sameAs":"http://www.franksmovielog.com"
      },
      "reviewRating":{
        "@type":"Rating",
        "ratingValue": #{Movielog::ConvertGradeToNumber.call(grade: review.grade) / 3}
      }
    }


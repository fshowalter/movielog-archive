:ruby
  more_for_cast = Movielog::Db::QueryRelatedTitlesByCast.call(db: Movielog.db, title: review.db_title)

  array_window = lambda do |array, size, center|
    return [] if size <= 0
    return [array[center]] if size == 1
    return array if size >= array.length

    closest_limit = lambda do |total_size, index|
      return 0 if index < 0
      return total_size - 1 if index >= total_size
      index
    end

    array_closest_limit = closest_limit.curry[array.length]
    fail center.inspect if array.find_index(center).nil?
    center = array_closest_limit[array.find_index(center)]

    lower = array_closest_limit[center - size / 2]
    upper = array_closest_limit[center + size / 2]

    while (lower..upper).count < size
      lower = array_closest_limit[lower - 1]
      upper = array_closest_limit[upper + 1]
    end

    return array.slice(lower..upper) if (lower..upper).count == size

    return array.slice((lower + 1)..upper)
  end

  titles_minus_current_review = lambda do |titles, current_review|
    current_db_title = current_review.db_title
    window  = array_window.call(titles, 5, current_db_title)
    window.select { |title| title != current_db_title }
      .map { |title| Movielog.reviews_by_title[title] }
  end

- unless more_for_cast.empty?
  - more_for_cast.each do |performer, titles|
    - next unless titles.length > 4
    - reviews = titles_minus_current_review.call(titles, review)
    .review_more
      .review_more-heading
        More with #{cast_and_crew_link(performer, class: 'review_more-person_link')}
      = partial('components/more_list/more_list', locals: { reviews: reviews })
